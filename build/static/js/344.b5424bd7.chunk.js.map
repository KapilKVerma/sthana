{"version":3,"file":"static/js/344.b5424bd7.chunk.js","mappings":"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","sources":["components/teamMembers/components/teamMembersHeader.tsx","components/wrapperComponents/teamMember/memberListCard.tsx","components/wrapperComponents/teamMember/memberGridCard.tsx","components/teamMembers/teamMembers.tsx","serverUrl.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { BsListUl, BsFillGridFill } from \"react-icons/bs\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { TeamMember } from \"../../../models/member.model\";\r\n\r\ninterface Props {\r\n  listView: boolean;\r\n  setListView: React.Dispatch<React.SetStateAction<boolean>>;\r\n  membersList: TeamMember[];\r\n  setMembersToShow: React.Dispatch<React.SetStateAction<TeamMember[]>>;\r\n}\r\n\r\nconst TeamMembersHeader: React.FC<Props> = (props) => {\r\n  const { listView, setListView, membersList, setMembersToShow } = props;\r\n\r\n  const filterMembersList = (value: string, membersList: TeamMember[]) => {\r\n    let result = membersList.filter((item) =>\r\n      (item.firstName + \" \" + item.lastName)\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n    );\r\n    setMembersToShow(result);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {/* Title and Search  */}\r\n        <section className=\"w-50\">\r\n          <div>\r\n            <form className=\"search__bar\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Enter member name...\"\r\n                className=\"search__bar---input\"\r\n                onChange={(e) => {\r\n                  filterMembersList(e.target.value, membersList);\r\n                }}\r\n              />\r\n              <Button\r\n                variant=\"dark\"\r\n                type=\"submit\"\r\n                className=\"search__bar---button\"\r\n              >\r\n                <AiOutlineSearch size=\"1.25rem\" />\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Option Buttons */}\r\n        <section className=\"d-flex flex-row justify-content-end\">\r\n          <Button\r\n            variant={listView ? \"dark\" : \"light\"}\r\n            onClick={() => setListView(true)}\r\n            active={listView}\r\n          >\r\n            <BsListUl size={\"1.25rem\"} />\r\n          </Button>\r\n          <div className=\"m-1\" />\r\n          <Button\r\n            variant={!listView ? \"dark\" : \"light\"}\r\n            onClick={() => setListView(false)}\r\n            active={!listView}\r\n          >\r\n            <BsFillGridFill size={\"1.25rem\"} />\r\n          </Button>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TeamMembersHeader;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n  profileImage: string;\r\n}\r\n\r\nconst MemberListCard: React.FC<Props> = ({ children, profileImage }) => {\r\n  return (\r\n    <div className=\"team__member__card d-flex flex-row justify-content-start\">\r\n      <div\r\n        className=\"team__member__card--image\"\r\n        style={{\r\n          backgroundImage: `url(${profileImage})`,\r\n        }}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberListCard;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n  profileImage: string;\r\n}\r\n\r\nconst MemberGridCard: React.FC<Props> = ({ children, profileImage }) => {\r\n  return (\r\n    <div className=\"team__member__card\">\r\n      <div\r\n        className=\"team__member__card--image\"\r\n        style={{\r\n          backgroundImage: `url(${profileImage})`,\r\n          margin: \"1rem auto\",\r\n          width: \"150px\",\r\n          height: \"150px\",\r\n        }}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberGridCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { TeamMember } from \"../../models/member.model\";\r\nimport TeamMembersHeader from \"./components/teamMembersHeader\";\r\nimport MemberListCard from \"../wrapperComponents/teamMember/memberListCard\";\r\nimport MemberGridCard from \"../wrapperComponents/teamMember/memberGridCard\";\r\nimport { serverUrl } from \"../../serverUrl\";\r\nimport axios from \"axios\";\r\n\r\nconst TeamMembers: React.FC = () => {\r\n  const [listView, setListView] = useState<boolean>(true);\r\n  const [membersToShow, setMembersToShow] = useState<TeamMember[]>([]);\r\n  const [teamMembers, setTeamMembers] = useState<TeamMember[]>([]);\r\n\r\n  const fetchTeamMembers = async () => {\r\n    try {\r\n      const response = await axios.get(`${serverUrl}/api/0.1/users/company/1`);\r\n      setMembersToShow(response.data);\r\n      setTeamMembers(response.data);\r\n    } catch (err: any) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTeamMembers();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Team Members Header */}\r\n      <section>\r\n        <TeamMembersHeader\r\n          listView={listView}\r\n          setListView={setListView}\r\n          membersList={teamMembers}\r\n          setMembersToShow={setMembersToShow}\r\n        />\r\n      </section>\r\n\r\n      {/* Team members list view */}\r\n      <section>\r\n        {listView ? (\r\n          <Row className=\"m-0 p-0 mt-3\">\r\n            {membersToShow.map((member, index) => {\r\n              return (\r\n                <Col lg={12} md={12} sm={12} key={index} className=\"m-0 p-1\">\r\n                  <MemberListCard profileImage={member.profileImg}>\r\n                    <section className=\"w-25\">\r\n                      <div className=\"p-3\">\r\n                        <h5>{`${member.firstName} ${member.lastName}`}</h5>\r\n                        <h6>{`${member.jobTitle}`}</h6>\r\n                      </div>\r\n                    </section>\r\n                    <section className=\"w-75\">\r\n                      <div className=\"member__skills--container\">\r\n                        <h6 className=\"\">Skilled In</h6>\r\n                        <Row className=\"member__skills--list m-0 p-0\">\r\n                          {member.skills.map((skill, index) => {\r\n                            return (\r\n                              <span key={index} className=\"member__skills--tag\">\r\n                                {skill}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </Row>\r\n                      </div>\r\n                    </section>\r\n                  </MemberListCard>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        ) : null}\r\n      </section>\r\n\r\n      {/* Team members grid view */}\r\n      <section>\r\n        {!listView ? (\r\n          <Row className=\"m-0 p-0 mt-3\">\r\n            {membersToShow.map((member, index) => {\r\n              return (\r\n                <Col lg={3} md={4} sm={6} key={index} className=\"m-0 p-1\">\r\n                  <MemberGridCard profileImage={member.profileImg}>\r\n                    {/* Name and job title */}\r\n                    <section>\r\n                      <div className=\"text-center\">\r\n                        <h5>{`${member.firstName} ${member.lastName}`}</h5>\r\n                        <h6>{`${member.jobTitle}`}</h6>\r\n                      </div>\r\n                    </section>\r\n\r\n                    {/* Skills List */}\r\n                    <section>\r\n                      <div className=\"member__skills--container\">\r\n                        <h6 className=\"pl-1\">Skilled In</h6>\r\n                        <Row className=\"member__skills--list m-0 p-0 \">\r\n                          {member.skills.map((skill, index) => {\r\n                            return (\r\n                              <span key={index} className=\"member__skills--tag\">\r\n                                {skill}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </Row>\r\n                      </div>\r\n                    </section>\r\n                  </MemberGridCard>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        ) : null}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TeamMembers;\r\n","export const serverUrl: string = \"http://localhost:5001\";\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["props","listView","setListView","membersList","setMembersToShow","_jsx","_Fragment","children","_jsxs","className","type","name","placeholder","onChange","e","value","result","filter","item","firstName","lastName","toLowerCase","includes","filterMembersList","target","Button","variant","AiOutlineSearch","size","onClick","active","BsListUl","BsFillGridFill","_ref","profileImage","style","backgroundImage","concat","margin","width","height","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","membersToShow","_useState5","_useState6","teamMembers","setTeamMembers","fetchTeamMembers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","serverUrl","sent","data","t0","console","log","message","stop","apply","arguments","useEffect","React","TeamMembersHeader","Row","map","member","index","Col","lg","md","sm","MemberListCard","profileImg","jobTitle","skills","skill","MemberGridCard","ref","_useCol","as","bsPrefix","_objectWithoutProperties","_excluded","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","_objectSpread","classNames","useCol","_useCol2","_useCol2$","colProps","_excluded2","_useCol2$2","_useCol2$2$as","Component","length","displayName","_ref$as","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}