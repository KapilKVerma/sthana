{"version":3,"file":"static/js/18.8711b9a5.chunk.js","mappings":"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","sources":["components/timeLine/timeLine.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Gantt, Task, ViewMode } from \"gantt-task-react\";\r\nimport \"gantt-task-react/dist/index.css\";\r\n\r\nlet tasksList: Task[] = [\r\n  {\r\n    start: new Date(2023, 0, 1),\r\n    end: new Date(2023, 4, 18),\r\n    name: \"Network Infrastructure Upgrade\",\r\n    id: \"project 1\",\r\n    type: \"project\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    hideChildren: false,\r\n    styles: { progressColor: \"#17C3A5\", progressSelectedColor: \"#17C3A5\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 1),\r\n    end: new Date(2023, 0, 3),\r\n    name: \"Task 1\",\r\n    id: \"task 1\",\r\n    type: \"task\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    project: \"project 1\",\r\n    styles: { progressColor: \"#5096F7\", progressSelectedColor: \"#5096F7\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 3),\r\n    end: new Date(2023, 0, 6),\r\n    name: \"Task 2\",\r\n    id: \"task 2\",\r\n    type: \"task\",\r\n    progress: 50,\r\n    isDisabled: true,\r\n    dependencies: [\"task 1\"],\r\n    project: \"project 1\",\r\n    styles: { progressColor: \"#5096F7\", progressSelectedColor: \"#5096F7\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 4),\r\n    end: new Date(2023, 0, 6),\r\n    name: \"Task 3\",\r\n    id: \"task 3\",\r\n    type: \"task\",\r\n    progress: 55,\r\n    isDisabled: true,\r\n    dependencies: [\"task 1\"],\r\n    project: \"project 1\",\r\n    styles: { progressColor: \"#5096F7\", progressSelectedColor: \"#5096F7\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 7),\r\n    end: new Date(2023, 0, 15),\r\n    name: \"Task 4\",\r\n    id: \"task 4\",\r\n    type: \"task\",\r\n    progress: 30,\r\n    isDisabled: true,\r\n    dependencies: [\"task 2\", \"task 3\"],\r\n    project: \"project 1\",\r\n    styles: { progressColor: \"#5096F7\", progressSelectedColor: \"#5096F7\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 16),\r\n    end: new Date(2023, 0, 18),\r\n    name: \"Task 5\",\r\n    id: \"task 5\",\r\n    type: \"task\",\r\n    progress: 10,\r\n    isDisabled: true,\r\n    dependencies: [\"task 4\"],\r\n    project: \"project 1\",\r\n    styles: { progressColor: \"#5096F7\", progressSelectedColor: \"#5096F7\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 0, 1),\r\n    end: new Date(2023, 2, 18),\r\n    name: \"Infrastructure Upgrade\",\r\n    id: \"project 2\",\r\n    type: \"project\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    hideChildren: false,\r\n    styles: { progressColor: \"#17C3A5\", progressSelectedColor: \"#17C3A5\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 2, 1),\r\n    end: new Date(2023, 6, 25),\r\n    name: \"Infrastructure Upgrade\",\r\n    id: \"project 3\",\r\n    type: \"project\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    hideChildren: false,\r\n    styles: { progressColor: \"#17C3A5\", progressSelectedColor: \"#17C3A5\" },\r\n  },\r\n\r\n  {\r\n    start: new Date(2023, 4, 15),\r\n    end: new Date(2023, 7, 25),\r\n    name: \"Infrastructure Upgrade\",\r\n    id: \"project 4\",\r\n    type: \"project\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    hideChildren: false,\r\n    styles: { progressColor: \"#17C3A5\", progressSelectedColor: \"#17C3A5\" },\r\n  },\r\n  {\r\n    start: new Date(2023, 8, 5),\r\n    end: new Date(2024, 0, 25),\r\n    name: \"Infrastructure Upgrade\",\r\n    id: \"project 5\",\r\n    type: \"project\",\r\n    progress: 100,\r\n    isDisabled: true,\r\n    hideChildren: false,\r\n    styles: { progressColor: \"#17C3A5\", progressSelectedColor: \"#17C3A5\" },\r\n  },\r\n];\r\n\r\nconst TimeLine: React.FC = () => {\r\n  const [tasks, setTasks] = useState<Task[]>(tasksList);\r\n\r\n  const handleExpanderClick = (task: Task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? task : t)));\r\n    console.log(\"On expander click Id:\" + task.id);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section style={{ backgroundColor: \"rgba(255,255,255)\" }}>\r\n        <Gantt\r\n          tasks={tasks}\r\n          viewMode={ViewMode.Month}\r\n          listCellWidth={\"\"}\r\n          onExpanderClick={handleExpanderClick}\r\n          columnWidth={100}\r\n        />\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TimeLine;\r\n"],"names":["tasksList","start","Date","end","name","id","type","progress","isDisabled","hideChildren","styles","progressColor","progressSelectedColor","project","dependencies","_useState","useState","_useState2","_slicedToArray","tasks","setTasks","_jsx","React","children","style","backgroundColor","Gantt","viewMode","ViewMode","Month","listCellWidth","onExpanderClick","task","map","t","console","log","columnWidth"],"sourceRoot":""}