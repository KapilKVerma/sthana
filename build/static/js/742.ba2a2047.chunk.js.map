{"version":3,"file":"static/js/742.ba2a2047.chunk.js","mappings":"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","sources":["components/UIComponents/renderButton.tsx","components/forms/editTask/editTask.tsx","components/workboard/components/taskCard.tsx","components/workboard/workBoard.tsx","serverUrl.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { BiTrash, BiEdit, BiCheck, BiExpand } from \"react-icons/bi\";\r\nimport { MdStart } from \"react-icons/md\";\r\nimport { HiOutlineMenuAlt2 } from \"react-icons/hi\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  type: string;\r\n  variant?: string;\r\n}\r\n\r\nconst RenderButton: React.FC<Props> = ({ title, type, variant = \"light\" }) => {\r\n  type buttonObject = {\r\n    [key: string]: JSX.Element;\r\n  };\r\n  const buttonsList: buttonObject = {\r\n    expandButton: <BiExpand size={\"1.25rem\"} />,\r\n    menuButton: <HiOutlineMenuAlt2 size={\"1.25rem\"} />,\r\n    startButton: <MdStart size={\"1.25rem\"} />,\r\n    deleteButton: <BiTrash size={\"1.25rem\"} />,\r\n    editButton: <BiEdit size={\"1.25rem\"} />,\r\n    completeButton: <BiCheck size={\"1.25rem\"} />,\r\n    closeButton: <AiOutlineClose size={\"1.25rem\"} />,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button size=\"sm\" variant={variant} className=\"w-100 text-left\">\r\n        {buttonsList[type]}\r\n        {title ? <span>&nbsp;&nbsp;{title}</span> : null}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderButton;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Task } from \"../../../models/task.model\";\r\n\r\ninterface Props {\r\n  task: Task;\r\n  setEditTask: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst EditTask: React.FC<Props> = ({ task, setEditTask }) => {\r\n  return (\r\n    <>\r\n      <form className=\"object__form\">\r\n        <section className=\"mb-3\">\r\n          <div className=\"input__field mb-3\">\r\n            <label>Task Title:</label>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              defaultValue={task.title}\r\n              placeholder=\"Enter Task title\"\r\n              className=\"input__field--text\"\r\n              // value={newTaskState?.title}\r\n              // onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input__field mb-3\">\r\n            <label>Task Description:</label>\r\n            <br></br>\r\n            <textarea\r\n              name=\"description\"\r\n              rows={2}\r\n              defaultValue={task.description}\r\n              placeholder=\"Enter Task Description\"\r\n              className=\"input__field--text\"\r\n              // value={newTaskState?.description}\r\n              // onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-row justify-content-between mb-3\">\r\n            <div className=\"input__field w-50\">\r\n              <label>Start Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                className=\"input__field--date\"\r\n                // onChange={handleDateChange}\r\n              />\r\n            </div>\r\n            <div className=\"m-2\"></div>\r\n            <div className=\"input__field w-50\">\r\n              <label>Completion Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                className=\"input__field--date\"\r\n                // onChange={handleDateChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section>\r\n          <div className=\"d-flex flex-row justify-content-end\">\r\n            <Button\r\n              variant=\"outline-info\"\r\n              className=\"form__button\"\r\n              onClick={() => setEditTask(false)}\r\n            >\r\n              Close\r\n            </Button>\r\n            <div className=\"m-1\"></div>\r\n            <Button\r\n              variant=\"info\"\r\n              type=\"submit\"\r\n              className=\"form__button\"\r\n              // onClick={submitNewTask}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </section>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/modal\";\r\nimport { Task } from \"../../../models/task.model\";\r\nimport RenderButton from \"../../UIComponents/renderButton\";\r\nimport EditTask from \"../../forms/editTask/editTask\";\r\nimport dayjs from \"dayjs\";\r\n\r\ninterface Props {\r\n  task: Task;\r\n  handleTaskStatus: (task: Task, status: string) => void;\r\n}\r\n\r\nconst TaskCard: React.FC<Props> = ({ task, handleTaskStatus }) => {\r\n  const [showMenuItems, setShowMenuItems] = useState<Boolean>(false);\r\n  const [editTask, setEditTask] = useState<boolean>(false);\r\n\r\n  const handleShow = () => setEditTask(true);\r\n  const handleClose = () => setEditTask(false);\r\n\r\n  return (\r\n    <>\r\n      <h6\r\n        className=\"d-flex flex-row justify-content-between mb-4\"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <div className=\"w-75\">{`${task.title}`}</div>\r\n\r\n        <span onClick={() => setShowMenuItems(!showMenuItems)}>\r\n          <RenderButton title={\"\"} type={\"menuButton\"} />\r\n        </span>\r\n\r\n        <div\r\n          className=\"task__menu--list\"\r\n          style={{\r\n            display: showMenuItems ? \"block\" : \"none\",\r\n          }}\r\n        >\r\n          {!task.completed && !task.inProgress ? (\r\n            <>\r\n              <span\r\n                onClick={() => {\r\n                  setShowMenuItems(false);\r\n                  handleTaskStatus(task, \"start\");\r\n                }}\r\n              >\r\n                <RenderButton title={\"Start\"} type={\"startButton\"} />\r\n              </span>\r\n              <br />\r\n              <span\r\n                onClick={() => {\r\n                  setShowMenuItems(false);\r\n                  handleShow();\r\n                }}\r\n              >\r\n                <RenderButton title={\"Edit\"} type={\"editButton\"} />\r\n              </span>\r\n            </>\r\n          ) : null}\r\n\r\n          {!task.completed && task.inProgress ? (\r\n            <>\r\n              <span\r\n                onClick={() => {\r\n                  setShowMenuItems(false);\r\n                  handleTaskStatus(task, \"complete\");\r\n                }}\r\n              >\r\n                <RenderButton title={\"Complete\"} type={\"completeButton\"} />\r\n              </span>\r\n              <br />\r\n              <span\r\n                onClick={() => {\r\n                  setShowMenuItems(false);\r\n                  handleShow();\r\n                }}\r\n              >\r\n                <RenderButton title={\"Edit\"} type={\"editButton\"} />\r\n              </span>\r\n            </>\r\n          ) : null}\r\n\r\n          {task.completed && !task.inProgress ? (\r\n            <>\r\n              <span\r\n                onClick={() => {\r\n                  setShowMenuItems(false);\r\n                  handleTaskStatus(task, \"start\");\r\n                }}\r\n              >\r\n                <RenderButton title={\"Start\"} type={\"startButton\"} />\r\n              </span>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      </h6>\r\n      {/* Body */}\r\n      <p>{task.description}</p>\r\n      <p>\r\n        Due Date:&nbsp;&nbsp;\r\n        {dayjs(task.endDate).format(\"DD/MM/YYYY\")}\r\n      </p>\r\n\r\n      {/* Update Modal */}\r\n      <Modal size=\"lg\" show={editTask} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title className=\"text-capitalize\">Edit task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"p-0\">\r\n          <EditTask task={task} setEditTask={setEditTask} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport TaskCard from \"./components/taskCard\";\r\nimport { Task } from \"../../models/task.model\";\r\nimport { Project } from \"../../models/project.model\";\r\nimport { AiOutlineProject } from \"react-icons/ai\";\r\nimport { serverUrl } from \"../../serverUrl\";\r\nimport axios from \"axios\";\r\n\r\nenum taskFilters {\r\n  remaining,\r\n  inProgress,\r\n  completed,\r\n}\r\n\r\nconst Workboard: React.FC = () => {\r\n  const [tasksList, setTasksList] = useState<Task[]>([]);\r\n  const [projectsList, setProjectsList] = useState<Project[]>([]);\r\n\r\n  // Tasks filter handler\r\n  const filterTasks = (tasks: Task[], status: number): Task[] => {\r\n    let result: Task[] = [];\r\n    if (status === taskFilters.remaining)\r\n      result = tasks.filter((task) => !task.completed && !task.inProgress);\r\n\r\n    if (status === taskFilters.inProgress)\r\n      result = tasks.filter((task) => !task.completed && task.inProgress);\r\n\r\n    if (status === taskFilters.completed)\r\n      result = tasks.filter((task) => task.completed && !task.inProgress);\r\n\r\n    return result;\r\n  };\r\n\r\n  //  Task progress status handler\r\n  const handleTaskStatus = async (task: Task, status: string) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${serverUrl}/api/0.1/tasks/${task.id}/progressStatus`,\r\n        { task, status }\r\n      );\r\n      setTasksList(response.data);\r\n    } catch (err: any) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  // Fetch Tasks\r\n  const fetchData = async () => {\r\n    try {\r\n      const apiCalls = [\r\n        axios.get(`${serverUrl}/api/0.1/tasks/`), // fetch tasks\r\n        axios.get(`${serverUrl}/api/0.1/projects/`), // fetch projects\r\n      ];\r\n\r\n      const responses = await Promise.all(apiCalls);\r\n\r\n      setTasksList(\r\n        responses[0].data.filter((item: Task) => item.active === true)\r\n      );\r\n      setProjectsList(responses[1].data);\r\n    } catch (err: any) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"m-0 p-1\">\r\n        <Col lg={9}>\r\n          <Row className=\"mb-4\">\r\n            <Col lg={4} md={4} sm={4}>\r\n              <div className=\"workboard__tasks__header\">\r\n                <h5>\r\n                  Remaining (\r\n                  {filterTasks(tasksList, taskFilters.remaining).length})\r\n                </h5>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={4} sm={4}>\r\n              <div className=\"workboard__tasks__header\">\r\n                <h5>\r\n                  In Progress (\r\n                  {filterTasks(tasksList, taskFilters.inProgress).length})\r\n                </h5>\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={4} sm={4}>\r\n              <div className=\"workboard__tasks__header\">\r\n                <h5>\r\n                  Completed (\r\n                  {filterTasks(tasksList, taskFilters.completed).length})\r\n                </h5>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col lg={4} md={4} sm={4} className=\"p-1\">\r\n              <div className=\"workboard__tasks__list--container\">\r\n                {filterTasks(tasksList, taskFilters.remaining).map(\r\n                  (task, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"task__card mb-2 pb-1\"\r\n                        key={index}\r\n                        style={{ borderLeft: \"5px solid rgb(80,150,247)\" }}\r\n                      >\r\n                        <TaskCard\r\n                          task={task}\r\n                          handleTaskStatus={handleTaskStatus}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={4} sm={4} className=\"p-1\">\r\n              <div className=\"workboard__tasks__list--container\">\r\n                {filterTasks(tasksList, taskFilters.inProgress).map(\r\n                  (task, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"task__card mb-2 pb-1\"\r\n                        key={index}\r\n                        style={{ borderLeft: \"5px solid rgb(251,129,55)\" }}\r\n                      >\r\n                        <TaskCard\r\n                          task={task}\r\n                          handleTaskStatus={handleTaskStatus}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col lg={4} md={4} sm={4} className=\"p-1\">\r\n              <div className=\"workboard__tasks__list--container\">\r\n                {filterTasks(tasksList, taskFilters.completed).map(\r\n                  (task, index) => {\r\n                    return (\r\n                      <div\r\n                        className=\"task__card mb-2 pb-1\"\r\n                        key={index}\r\n                        style={{ borderLeft: \"5px solid rgb(23,195,165)\" }}\r\n                      >\r\n                        <TaskCard\r\n                          task={task}\r\n                          handleTaskStatus={handleTaskStatus}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col lg={3} className=\"pl-4 pr-0\">\r\n          <div\r\n            className=\"workboard__tasks__header\"\r\n            style={{ backgroundColor: \"rgb(23,195,165)\", color: \"#fff\" }}\r\n          >\r\n            <h5>Assigned Project(s)</h5>\r\n          </div>\r\n          <div>\r\n            {projectsList.slice(0, 2).map((project, index) => {\r\n              return (\r\n                <div key={index} className=\"mt-5\">\r\n                  <div className=\"project__card\">\r\n                    <span className=\"project__card--icon\">\r\n                      <AiOutlineProject size={\"2rem\"} />\r\n                    </span>\r\n                    <div>\r\n                      <h5>{`${project.name}`}</h5>\r\n                      <p>{`${project.description}`}</p>\r\n                      <Row className=\"p-0\">\r\n                        <Col lg={6} className=\"m-0\">\r\n                          <h6>Progress (65%)</h6>\r\n                          <ProgressBar>\r\n                            <ProgressBar\r\n                              striped\r\n                              variant=\"success\"\r\n                              now={65}\r\n                              key={1}\r\n                            />\r\n                          </ProgressBar>\r\n                        </Col>\r\n\r\n                        <Col lg={6} className=\"m-0\">\r\n                          <h6>Pending Tasks</h6>\r\n                          <h6>13</h6>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Workboard;\r\n","export const serverUrl: string = \"http://localhost:5001\";\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["_ref","title","type","_ref$variant","variant","buttonsList","expandButton","_jsx","BiExpand","size","menuButton","HiOutlineMenuAlt2","startButton","MdStart","deleteButton","BiTrash","editButton","BiEdit","completeButton","BiCheck","closeButton","AiOutlineClose","_Fragment","children","_jsxs","Button","className","task","setEditTask","name","defaultValue","placeholder","rows","description","onClick","handleTaskStatus","_useState","useState","_useState2","_slicedToArray","showMenuItems","setShowMenuItems","_useState3","_useState4","editTask","handleShow","style","position","concat","RenderButton","display","completed","inProgress","dayjs","endDate","format","Modal","show","onHide","Header","Title","Body","EditTask","taskFilters","tasksList","setTasksList","projectsList","setProjectsList","filterTasks","tasks","status","result","remaining","filter","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","put","serverUrl","id","sent","data","t0","console","log","message","stop","_x","_x2","apply","arguments","fetchData","_ref2","_callee2","apiCalls","responses","_context2","get","Promise","all","item","active","useEffect","React","Row","Col","lg","md","sm","length","map","index","borderLeft","TaskCard","backgroundColor","color","slice","project","AiOutlineProject","ProgressBar","striped","now","props","ref","_useCol","as","bsPrefix","_objectWithoutProperties","_excluded","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","_objectSpread","classNames","useCol","_useCol2","_useCol2$","colProps","_excluded2","_useCol2$2","_useCol2$2$as","Component","displayName","func","child","hasChildOfType","toArray","some","ROUND_PRECISION","getPercentage","min","max","percentage","Math","round","renderProgressBar","_classNames","label","visuallyHidden","animated","role","_defineProperty","width","_ref2$isChild","isChild","rest","wrapperProps","_excluded3","cloneElement","_ref$as","decoratedBsPrefix","sizePrefix","cols"],"sourceRoot":""}